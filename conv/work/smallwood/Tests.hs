module Tests where

import LogicalForm
import Parsing

sekuhara_test = [
	"Christine angered Tia.",
	"Tia offended the company.",
	"Mr Batchelor angered Tia.",
	"Mr Batchelor's offensive language angered Tia.",
	"The language angered interviewees",
	"Some language angered interviewees",
	"Some offensive language angered interviewees",
	"The boss angered visitors.",
	"The company had interviewees.",
	"The boss's language angered the visitor."
	-- "The company's language angered visitors."
	]


biz_test = [
	"Christine angered Tia.",
	"Tia offended the company.",
	"Mr Batchelor angered Tia.",
	"The language angered the visitor.",
	"The language angered visitors.",
	"The language angered customers",
	"The boss angered visitors.",
	-- "The company's language angered visitors."
	"The company had customers."
	]


spell_test = [
	"Christine could spell names.",
	"Mr Batchelor's daughter could spell names.",
	"Mr Batchelor could spell names.",
	"Mr Batchelor couldn't spell names.",
	"Mr Batchelor knew English but Mr Batchelor couldn't spell names.",
	"Mr Batchelor's boss could spell names.",
	"Mr Batchelor couldn't spell Tia's name.",
	"Christine could spell Mr Batchelor's name,\
	\ but Mr Batchelor couldn't spell Christine's name.",
	"Tia could spell Tia's name and Tia could spell Mr Batchelor's name,\
	\ but Mr Batchelor couldn't spell Tia's name.",
	"Tia could spell names.\
	\ Tia could spell names.\
	\ Mr Batchelor's daughter could spell names.\
	\ But, Mr Batchelor couldn't spell names."
	]

test_text = [
	"Mr Batchelor's daughter spoke English.",
	-- "Mr Batchelor's daughter's brother spoke English.",
	"Mr Batchelor's daughter had a brother and a brother spoke English.",
	"Mr Batchelor's daughter knew English and the boss spoke English.",
	"Mr Batchelor's daughter spoke English but the boss didn't speak English.",
	"Mr Batchelor talked to the boss and the boss talked to Mr Batchelor's daughter.",
	"Mr Batchelor talked to the boss and the boss talked to Tia \
	\and Tia talked to Mr Batchelor.",
	"Mr Batchelor looked back on her daughter's upbringing. \
	\Mr Batchelor talked to the boss. \
	\Mr Batchelor's daughter asked the boss about the Dominican Republic."
	]

test_possessives = [
	"Tia's language looked back.",
	"Mr Batchelor's daughter looked back.",
	"Tia's daughter looked back on Mr Batchelor's upbringing.",
	"Tia's daughter looked back on Tia's upbringing.",
	"Mr Batchelor's daughter looked back on Mr Batchelor's upbringing.",
	"Did Mr Batchelor's father look back on Mr Batchelor's upbringing?",
	"Did Mr Batchelor's brother look back on Mr Batchelor's upbringing?",
	"Did Mr Batchelor's father look at the woman's dress?",
	"Did Mr Batchelor's brother look at the woman's dress?",
	"Did Mr Batchelor's brother look at Tia's dress?",
	"Did Mr Batchelor's mother look at the woman's red dress?",
	"The boss's daughter offended Mr Batchelor's father.",
	"Mr Batchelor's daughter  offended the boss's daughter.",
	"Did the sister of Mr Batchelor's daughter know English?",
	"Did the father of Mr Batchelor's daughter look back on Mr Batchelor's daughter's upbringing?",
	"Did the brother of Mr Batchelor's daughter look back on Mr Batchelor's daughter's upbringing?",
	"Did the mother of Mr Batchelor's daughter speak English?",
	"Did the father of Mr Batchelor's daughter speak English?",
	"Did the brother of Mr Batchelor's daughter speak English?",
	"Did the mother of Mr Batchelor's daughter speak English?",
	"Did the brother of Mr Batchelor's daughter know English?",
	"Did the sister of Mr Batchelor's daughter know English?"
	]
haves = [
	"Did Mr Batchelor have Mr Batchelor's father?",
	"Did Mr Batchelor have Tia?",
	"Did Mr Batchelor have a mother?",
	"Did Mr Batchelor have a daughter?",
	"Did Mr Batchelor have a daughter?",
	"Did Mr Batchelor's father have a mother?",
	"Did Mr Batchelor have a job?",
	"Did Mr Batchelor have some job?",
	"Did Mr Batchelor have money?",
	"Did Mr Batchelor's father have money?",
	"Did Tia have money?",
	"Did Mr Batchelor have a parent?",
	"Did Mr Batchelor have some parents?",
	"Did Mr Batchelor have parents?",
	"Did Mr Batchelor's father have a parent?",
	"Did Mr Batchelor's father have some parents?",
	"Did Mr Batchelor's father have parents?",
	"Did Mr Batchelor have work?",
	"Did Tia work?",
	"Did Tia have work?",
	"Did Tia have a job?",
	"Did Mr Batchelor's father have work?",
	"Did the boss have the job?",
	"Did the boss have Mr Batchelor's daughter?",
	"Did the boss have a mother?",
	"Did the boss have a daughter?",
	"Did the boss have a daughter?",
	"Did the job have a mother?",
	"Did the boss have language?",
	"Did the boss have some language?",
	-- "Did the boss's daughter have some language?",
	-- "Did the boss's daughter have a language?",
	"Did the daughter have some language?",
	"Did the daughter have no language?",
	-- "Mr Batchelor's daughter had many language in the Dominican Republic.",
	"Did the parent have some language?",
	"Did the parent have no language?",
	"Did the boss have money?",
	"Did Tia have money?",
	"Did the job have money?",
	"Did Mr Batchelor's daughter have money?",
	"Did the boss have a parent?",
	"Did the boss have some parents?",
	"Did the boss have parents?",
	"Did the job have a parent?",
	"Did the job have some parents?",
	"Did the job have parents?",
	"Did the boss have a worker?",
	"Did Mr Batchelor's daughter have a worker?",
	"Did the job have a worker?",
	"Did someone have a worker?"
	]

ungrammatical = [
	"Did Tia worked?",
	"Mr Batchelor work?",
	"Man worked.",
	"Some man work.",
	"No worked.",
	"No-one work.",
	"Did Tia teach?",
	"Tia teach Mr Batchelor.",
	"Mr Batchelor taught.",
	"Did Mr Batchelor's daughter looked back?",
	"the boss look back?",
	"Man looked back.",
	"Some man work.",
	"No looked back.",
	"No-one work.",
	"Did Mr Batchelor's daughter teach?",
	"Mr Batchelor's daughter teach the boss.",
	"the boss raised."
	]

intransitives = [
	"Did Tia work?",
	"Did Mr Batchelor work?",
	"Did Mr Batchelor's father work?",
	"A man worked.",
	"Some man worked.",
	"No one worked.",
	"No-one worked.",
	"Everybody worked.",
	"Everyone worked.",
	-- "Many persons worked.",
	"No person worked.",
	"Did the man work?",
	"Did some man work?",
	"Did some men work?",
	"Did some woman work?",
	"Did some women work?",
	"Most women worked.",
	"Most women didn't work.",
	"Several women worked.",
	"Several women didn't work.",
	"Many women worked.",
	"Many women didn't work.",
	"All women worked.",
	"No woman worked.",
	"Most men worked.",
	"Most men didn't work.",
	"Several men worked.",
	"Several men didn't work.",
	"Many men worked.",
	"Many men didn't work.",
	"All men worked.",
	"No man worked.",
	"Did Mr Batchelor work at a company?",
	"Did Tia work at a company?",
	"Did Tia work at a hospital?",
	"Did Mr Batchelor's father work at a company?",
	"Mr Batchelor's father worked on a company?",
	"Mr Batchelor's father worked in a company?",
	"Mr Batchelor's daughter got married.",
	"Did Mr Batchelor's daughter leave?",
	"Did the boss leave?",
	"Did Mr Batchelor's father leave?",
	"A man left.",
	"Some man left.",
	"No one left.",
	"No-one left.",
	"Everybody left.",
	"Everyone left.",
	"Many persons left.",
	"No person left.",
	"Did the man leave?",
	"Did some man leave?",
	"Did some men leave?",
	"Did some woman leave?",
	"Did some women leave?",
	"Most persons left.",
	"Most men left.",
	"Most men didn't leave.",
	"Several men left.",
	"Several men didn't leave.",
	"Several persons left.",
	"Several persons didn't leave.",
	"Did Mr Batchelor's daughter look back?",
	"Did the boss look back?",
	"Did Mr Batchelor look back?",
	"A man looked back.",
	"Some man looked back.",
	"No one looked back.",
	"No-one looked back.",
	"Everybody looked back.",
	"Everyone looked back.",
	"Many persons looked back.",
	"No person looked back.",
	"Did the man look back?",
	"Did the girl look back?",
	"Did some man look back?",
	"Did some men look back?",
	"Did some woman look back?",
	"Did some women look back?",
	"Most men looked back.",
	"Most men didn't look back.",
	"Several men looked back.",
	"Several men didn't look back.",
	"Many men looked back.",
	"Many men didn't work.",
	"All men looked back.",
	"No man looked back."
	]

transitives = [
	-- "Did Tia study?",
	"Did Tia study IT?",
	"Tia studied information technology.",
	"Mr Batchelor studied information technology.",
	"Mr Batchelor studied information technology in the Dominican Republic.",
	"Mr Batchelor studied information technology at Boston University",
	"Did Mr Batchelor go to Boston University.",
	"Some woman went to Boston University.",
	"Some man went to Boston University.",
	"Some boy went to Boston University.",
	"Some man raised Mr Batchelor.",
	"A man raised Tia",
	"Some woman told a story.",
	"Did the boss work in the Dominican Republic?",
	"Did the boss work in the company?",
	"The boss worked on the company.",
	"The boss worked at the company.",
	"Did the boss work at a hospital?",
	"The boss worked on a hospital.",
	"The boss worked in a hospital.",
	"The boss worked as a language.",
	"Did the job work at a hospital?",
	"The job worked on a hospital.",
	"The job worked in a hospital.",
	"Did the job disappoint the boss?",
	"Did Mr Batchelor's daughter study information technology?",
	"Mr Batchelor's daughter studied information technology.",
	"The boss studied information technology.",
	"Did the boss study in the United States?",
	"The boss studied information technology at a hospital.",
	"The boss studied information technology at school",
	"Did the boss go to school.",
	"Some woman went to school.",
	"Some man went to school.",
	"Some boy went to school.",
	"Some man raised the boss.",
	"A man raised Mr Batchelor's daughter",
	"Some woman told a story.",
	"Did the boss come from the Dominican Republic?",
	"Did Mr Batchelor immigrate?",
	"Did the boss immigrate to the United States?",
	"Did Mr Batchelor go to the United States?",
	"Did Mr Batchelor come from the Dominican Republic?",
	"Did Mr Batchelor's daughter come to the United States?"
	]

ditransitive_tests = [
	"Mr Batchelor told a story.",
	"Mr Batchelor told Mr Batchelor's father a story.",
	"Mr Batchelor told a story to Mr Batchelor's daughter.",
	"Mr Batchelor told a story to Tia",
	"Mr Batchelor gave some job to Tia.",
	"Did Mr Batchelor give some job to Tia.",
	"Did Mr Batchelor give the job to Tia?",
	"Did Mr Batchelor give the job to someone?",
	"Mr Batchelor gave several job to Tia.",
	"Did someone give something to Tia?",
	"A woman gave the job to Tia.",
	"A woman gave the job to someone.",
	"A woman gave something to someone.",
	"Someone gave something to someone.",
	"Mr Batchelor gave Tia some job.",
	"Did Mr Batchelor give Tia some job?",
	"Did Mr Batchelor give Tia the job?",
	"Did Mr Batchelor give someone the job?",
	"Mr Batchelor gave Tia several job.",
	"Did someone give Tia something?",
	"A man gave Tia the job.",
	"A boy gave Tia the job.",
	"Leroy gave Tia the shoe.",
	"A man gave someone the job.",
	"A man gave someone something.",
	"Someone gave someone something.",
	"The boss told a story.",
	"The boss told the job a story.",
	"The boss told a story to the job.",
	"The boss told a story to Mr Batchelor's daughter",
	"The boss gave some language to Mr Batchelor's son.",
	"Did the boss give some language to Mr Batchelor's son.",
	"Did the boss give the language to Mr Batchelor's daughter?",
	"Did the boss give the language to someone?",
	"The boss gave several language to Mr Batchelor's son.",
	"Did someone give something to Mr Batchelor's daughter?",
	"A woman gave the language to Mr Batchelor's son.",
	"A woman gave the language to someone.",
	"A woman gave something to someone.",
	"Someone gave something to someone.",
	"The boss gave Mr Batchelor's daughter some language.",
	"Did the boss give Mr Batchelor's daughter some language?",
	"Did the boss give Mr Batchelor's daughter the language?",
	"Did the boss give someone the language?",
	"The boss gave Mr Batchelor's daughter several language.",
	"Did someone give Mr Batchelor's daughter something?",
	"A man gave Mr Batchelor's daughter the language.",
	"A man gave Mr Batchelor's daughter some language.",
	"A boy gave Mr Batchelor's daughter the language.",
	"The job gave Mr Batchelor's daughter the worker.",
	"A man gave someone the language.",
	"A man gave someone something.",
	"Someone gave someone something.",
	"Did the boss work at a hospital?",
	"The boss did cleaning at a hospital.",
	"Did Mr Batchelor's daughter spell names in the company?"
	]

wh_questions =[
	"Who worked?",
	"Who did Tia teach?",
	"Who taught Tia?",
	"Who gave the job to Tia?",
	"Who gave some job to Tia?",
	"Which person worked?",
	"Which person did Tia teach?",
	"Which subjects did Mr Payne teach?",
	"To whom did Mr Batchelor give some job?",
	"Who did Mr Batchelor give some job to?",
	"Who looked back?",
	"Which man looked back?",
	"Who raised Mr Batchelor's daughter?",
	"Which woman raised Mr Batchelor's daughter?",
	"Who gave the languages to Mr Batchelor's daughter?",
	"Who gave some languages to Mr Batchelor's daughter?",
	"Which person looked back?",
	"Which woman appreciated the boss?",
	"Which girl appreciated the boss?",
	"Which daughter appreciated the boss?",
	"Who did Mr Batchelor's daughter appreciate?",
	"Which person did Mr Batchelor's daughter appreciate?",
	"Which man did Mr Batchelor's daughter appreciate?",
	"Which woman did Mr Batchelor's daughter appreciate?",
	"Which thing did Mr Batchelor's daughter appreciate?",
	"Which worker did Mr Batchelor's daughter appreciate?",
	-- "To whom did the boss give some languages?",
	-- "Who did the boss give some languages to?",
	"Who had a worker?",
	"What did Mr Batchelor's daughter have?",
	"Who did Mr Batchelor's daughter have?",
	"Who did the job disappoint?",
	"Who did the boss's daughter appreciate?",
	"What did the boss's daughter appreciate?",
	"Which thing did the boss's daughter appreciate?",
	"Which man did the boss's daughter appreciate?",
	"Which woman did the boss's daughter appreciate?",
	"Which worker did the boss's daughter appreciate?",
	"What did someone have?"
	]

relclauses = [
	"A woman who taught Tia worked.",
	"The woman who taught Tia worked.",
	"Did the woman who taught Tia work?",
	"Did every woman who taught Tia work?",
	"The woman who gave the job to Tia worked.",
	"Mr Batchelor divorced the man that she gave the job to.",
	"Who killed the man that helped the woman " 
	 ++ "that had a boyfriend.",
	"A woman who raised Mr Batchelor's daughter looked back.",
	"The woman who raised Mr Batchelor's daughter looked back.",
	"Did the woman who raised Mr Batchelor's daughter look back?",
	"Did every person who raised Mr Batchelor's daughter look back?",
	"Did some person who raised Mr Batchelor's daughter look back?",
	"The woman who gave the languages to Mr Batchelor's daughter looked back.",
	"Mr Batchelor married the man that gave the languages to Mr Batchelor's son.",
	"The man that Mr Batchelor married gave the languages to Mr Batchelor's son.",
	"The man Mr Batchelor married gave the languages to Mr Batchelor's son.",
	"The job disappointed the man that gave Mr Batchelor's daughter the languages.",
	"The man that the job disappointed left the Dominican Republic.",
	"The man the job disappointed left the Dominican Republic.",
	"Mr Batchelor's daughter accepted the languages that a man gave Mr Batchelor's son.",
	"Mr Batchelor's daughter accepted the language that a man gave to Mr Batchelor's son.",
	"Who appreciated the man that gave the girl \
	 \that left the Dominican Republic a language?"
	]



lf0 = Rel "worked" [ Const(ents!!17) ]
lf00 = (Conj [(Rel "person" [Var 0]), (Rel "worked" [Var 0]) ] ) 
-- lf000 = (Exists (Conj [(Rel "person" [Var 0]), (Rel "worked" [Var 0]) ] )) (Const(ents)!!17)

lf1 = (Equi  (Rel "married" [ Const(ents!!9), Const(ents!!1) ]) (Neg (Rel "married" [ Const(ents!!8), Const(ents!!17)]) ) )

lf2 = (Conj [ (Rel "married" [ Const (ents !! 9), Const       (ents !! 1)]), (Rel "married" [ Const (ents !! 8), Const (ents !!   17)]) ] )

lf3 = Rel "married" [ Const (ents !! 8), Const (ents !! 17)]
lf4 = (Impl  (Rel "married" [ Const (ents !! 9), Const        (ents !! 1)]) (Rel "married" [ Const (ents !! 8), Const (ents !!    17)])  )
lf5 = (Conj [ (Rel "married" [ Const (ents !! 9), Const       (ents !! 1)]), (Rel "married" [ Const (ents !! 8), Const (ents !!   17)]) ] )
lf6 = (Disj [ (Rel "married" [ Const (ents !! 9), Const       (ents !! 1)]), (Rel "married" [ Const (ents !! 8), Const (ents !!   17)]) ] )

lf70 = ( \x -> ( Conj [ (Rel "daughter" [x]), (Rel "have" [x, Const (ents !! 8)]) ] ) ) (Const (ents !! 12) )
lf71 = ( \x -> ( Conj [ (Rel "daughter" [x]), (Rel "have" [x, Const (ents !! 17)]) ] ) ) (Const (ents !! 12) )
lf72 = ( \x -> ( Conj [ (Rel "daughter" [x]), (Rel "have" [x, Const (ents !! 17)]) ] ) ) (Const (ents !! 12) )
lf73 = \x -> Conj [ (Rel "daughter" [x]), (Rel "have" [x, Const (ents !! 17)]) ]
lf74 = ( \x -> ( Conj [ (Rel "daughter" [x]), (Rel "have" [x, Const (ents !! 17)]) ] ) )
lf75 = \x -> Impl (Rel "daughter" [x]) (Rel "have" [x, Const (ents !! 17)])
