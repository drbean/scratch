#!/usr/bin/perl

use strict;
use warnings;
use IO::All;
use YAML qw/LoadFile DumpFile Bless/;
use Cwd; use File::Basename;

$_REPL->load_plugin('DumpHistory');

my $dir = basename( getcwd );
use Moose::Autobox;
use Grades;
my $l = League->new( leagues => '/home/drbean/class', id => $dir );
my $g = Grades->new({ league => $l });
my %m = map { $_->{id} => $_ } @{ $l->members };

my $round = 8;
my $config = LoadFile "comp/$round/round.yaml";
my $activity = $config->{activity};
my %color;
for my $topic ( keys %$activity ) {
	my $forms = $activity->{$topic};
	for my $form ( keys %$forms ) {
		my $tables = $activity->{$topic}->{$form};
		for my $table ( @$tables ) {
			@color{ values %$table } = keys %$table;
		}
	}
}

my $new;
my $old = LoadFile "comp/$round/response.yaml";
for my $table ( keys %$old ) {
	my $play = $old->{$table};
	for my $topic ( keys %$play ) {
		my $topicplay = $old->{$topic};
		for my $form ( keys %$topicplay ) {
			my $formplay = $topicplay->{$form};
			my $player = keys %$formplay;
			my ($white, $black);
			if ( $color{ $player->[0] } eq 'White' ) {
				( $white, $black ) = @$player;
			}
			else {
				( $white, $black ) = reverse @$player;
			}
		$new->{$table}->{$topic}->{$form}->{ free } = $formplay;
		my $ans = { $player->[0] => { 1 => undef },
			$player->[1] => { 1 => undef } };
		Bless( $ans )->keys( [ $white, $black ] );
		$new->{$table}->{$topic}->{$form}->{ set } = $ans;
		}
	}
}

rename "comp/$round/response.yaml", "comp/$round/response.yaml.orig";
# DumpFile "comp/$round/response.yaml", $new;
