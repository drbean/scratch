#!/usr/bin/perl

use IO::All;

use strict;
use warnings;
use Encode qw/decode_utf8 encode_utf8/;

use RDF::Trine;

my $store = RDF::Trine::Store::Memory->new();
my $model = RDF::Trine::Model->new($store);

# parse some web data into the model, and print the count of resulting RDF statements
RDF::Trine::Parser->parse_url_into_model( 'http://zh.dbpedia.org/resource/Semantic_Web', $model );
print $model->size . " RDF statements parsed\n";

# Create a namespace object for the foaf vocabulary
my $foaf = RDF::Trine::Namespace->new( 'http://xmlns.com/foaf/0.1/' );
my $ont	= RDF::Trine::Namespace->new( 'http://dbpedia.org/ontology/' );

# Create a node object for the FOAF name property
my $pred = $foaf->primaryTopic;
$pred = $ont->abstract;
# alternatively:
# my $pred = RDF::Trine::Node::Resource->new('http://xmlns.com/foaf/0.1/name');

# Create an iterator for all the statements in the model with foaf:name as the predicate
my $iter = $model->get_statements(undef, $pred, undef);

# Now print the results
my $out;
print "Names of things:\n";
while (my $st = $iter->next) {
  my $s = $st->subject;
  my $o = $st->object->literal_value;
  my $p = $st->predicate;

  my $line = "Subject: $s, Predicate: $p, Object: $o\n";
  # $s and $name have string overloading, so will print correctly
  print $line;

  $out .= $line;
}

io("trine.txt")->print($out);
